/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package curvekneecalcpackage;

import java.util.ArrayList;
/**
 *
 * @author mtbjj
 */
public class Graph_Helper extends javax.swing.JFrame {
    public ArrayList<Point> f;
    Graph graph;
    /**
     * Creates new form CurveKneeCalcJFrame
     */
    
    public Graph_Helper() {
        graph = new Graph();
        initComponents();
        f = new ArrayList<>();
        graphPanel.add(graph);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();
        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        expressionInputTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        graphButton = new javax.swing.JButton();
        graphPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dataPointInputTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Curve Calc App");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(640, 480));
        setMinimumSize(new java.awt.Dimension(640, 480));
        setPreferredSize(new java.awt.Dimension(640, 480));
        setResizable(false);
        getContentPane().setLayout(null);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("CSV Graphing Helper");
        titleLabel.setToolTipText("");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLabel.setMaximumSize(new java.awt.Dimension(320, 30));
        titleLabel.setMinimumSize(new java.awt.Dimension(320, 30));
        titleLabel.setPreferredSize(new java.awt.Dimension(320, 30));
        getContentPane().add(titleLabel);
        titleLabel.setBounds(160, 20, 320, 30);

        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 190, 230, 170);

        expressionInputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expressionInputTextFieldActionPerformed(evt);
            }
        });
        expressionInputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                expressionInputTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(expressionInputTextField);
        expressionInputTextField.setBounds(40, 100, 230, 19);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Enter algebraic expression and type enter.");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 60, 230, 50);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton);
        clearButton.setBounds(40, 370, 59, 25);

        graphButton.setText("Graph");
        graphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphButtonActionPerformed(evt);
            }
        });
        getContentPane().add(graphButton);
        graphButton.setBounds(190, 370, 64, 25);

        graphPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        graphPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        graphPanel.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(graphPanel);
        graphPanel.setBounds(310, 120, 310, 300);

        jLabel2.setText("0");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(300, 410, 6, 15);

        jLabel3.setText("0");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(310, 420, 6, 15);

        jLabel4.setText("Y");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(290, 240, 8, 15);

        jLabel5.setText("X");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(460, 440, 7, 15);

        jLabel6.setText("Graph");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(440, 100, 30, 15);

        dataPointInputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataPointInputTextFieldActionPerformed(evt);
            }
        });
        dataPointInputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dataPointInputTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(dataPointInputTextField);
        dataPointInputTextField.setBounds(40, 150, 230, 19);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("Enter comma separated data point and type enter.");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 110, 230, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void expressionInputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expressionInputTextFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_expressionInputTextFieldActionPerformed

    private void expressionInputTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expressionInputTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_expressionInputTextFieldKeyTyped

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        while(!f.isEmpty())
            f.remove(0);
        outputTextArea.setText("");
        expressionInputTextField.setText("");
        graph.clearGraph();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void graphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphButtonActionPerformed
        // TODO add your handling code here:
        for(int i = f.size()-1; i >= 1; i--){
            graph.drawLine(f.get(i), f.get(i-1), (int)graphPanel.getBounds().getHeight());
            //System.out.println("Slope: " + CalcHelper.slope(f.get(i),f.get(i-1)));
        }
        //graph.drawLine(new Point(5,6), new Point(5,6));
    }//GEN-LAST:event_graphButtonActionPerformed

    private void dataPointInputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataPointInputTextFieldActionPerformed
        // TODO add your handling code here:
        String text = dataPointInputTextField.getText();
        int x = 0;
        int y = 0;
        Point p;
        for(int i = 0; i < text.length(); i++) {
            if(text.charAt(i) == ',') {
                x = Integer.parseInt(text.substring(0,i).trim());
                y = Integer.parseInt(text.substring(i+1,text.length()).trim());
                p = new Point(x,y);
                outputTextArea.append("x: " + x + ",   y: " + y + "\n");
                f.add(p);
                break;
            }
        }
        dataPointInputTextField.setText("");
    }//GEN-LAST:event_dataPointInputTextFieldActionPerformed

    private void dataPointInputTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataPointInputTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_dataPointInputTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graph_Helper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Graph_Helper().setVisible(true);
        });
    }
    
    private static class CalcHelper {
        private ArrayList<Point> f = new ArrayList<>();
        
        public CalcHelper(ArrayList<Point> f) {
            this.f = f;
        }
        
        public static double derivativeAt(Point p) {
            int x = p.getX();
            return 0.0;
        }
        
        public static double slope(Point p1, Point p2) {
            return (p2.getX()-p1.getX())/(p2.getY() - p1.getY());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField dataPointInputTextField;
    private javax.swing.JTextField expressionInputTextField;
    private javax.swing.JButton graphButton;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
